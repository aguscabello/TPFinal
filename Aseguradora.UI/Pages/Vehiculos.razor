@page "/Vehiculos"
@inject NavigationManager Navegador;
@inject IJSRuntime JsRuntime;
@inject AgregarVehiculoUseCase AgregarVehiculoUseCase
@inject ListarVehiculosUseCase ListarVehiculosUseCase
@inject EliminarVehiculoUseCase EliminarVehiculoUseCase
@inject ObtenerVehiculoUseCase ObtenerVehiculoUseCase
@inject EsUnicoUseCase EsUnicoUseCase
@inject ListarTitularesUseCase ListarTitularesUseCase
 
@*@using Aseguradora.UI.Shared;  @*PREGUNTAR PORQUE ME TIRA EL DIALOGO WARNING*@

<PageTitle>Vehiculos</PageTitle>
<DialogoError @ref=dialogoError />
<DialogoExito @ref=dialogoExito/>

<h2> Vehiculos </h2>
<div style="margin: 25px; margin-left: 0;">
    <span>Agregar Vehiculo</span>
    <table class="table">
         <thead>
            <tr>               
                <th >Dominio</th>
                <th >Marca</th >
                <th >Anio</th>
                <th >TitularId</th >         
                <th >Accion</th >              
            </tr>
        </thead>
        <tbody>
            <tr>
    
                <td style="max-width: 120px"><input type="text"      placeholder="Dominio"       @bind="v.Dominio" style="max-width: 100%;" /></td>
                <td style="max-width: 120px"><input type="text"      placeholder="Marca"       @bind="v.Marca" style="max-width: 100%;" /></td>
                <td style="max-width: 120px"><input type="number"    placeholder="Anio"        @bind="v.Anio" style="max-width: 100%;" />    </td>
                <td style="max-width: 120px">
                    <select  @bind="v.TitularId" style="max-width: 100%;">
                        @foreach (var opcion in opciones)
                        {
                            <option value="@opcion">@opcion</option>
                        }
                    </select>
                </td>
                <td style="max-width: 120px"><button @onclick="Agregar">Agregar</button>    </td>
            </tr>
        </tbody>

    </table>
</div>


@if (vehiculos == null)
{
    <p><em>Cargando vehiculos...</em></p>
}
else
{
    
    <span>Listado de Vehiculos</span>
    <DialogoConfirmacion @ref=dialogo />
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Dominio</th>
                <th>Marca</th>
                <th>Anio</th>
                <th>TitularId</th>
                <th>Accion</th>              
            </tr>
        </thead>
        <tbody>
            @foreach (var v in vehiculos)
            {
                <tr>
                    <td>@v.Id</td>
                    <td>@v.Dominio</td>
                    <td>@v.Marca</td>
                    <td>@v.Anio</td>
                    <td>@v.TitularId</td>       
                    <td>
                        <button class="btn btn-primary" @onclick="()=>ModificarVehiculo(v)">
                            <span class="oi oi-pencil"></span>
                        </button>
                        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(v)" >
                            <span class="oi oi-trash"></span>
                        </button>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code 
{

    List<Vehiculo> vehiculos = new List<Vehiculo>();
    List<int> opciones = new List<int>();
    protected override void OnInitialized()
    {
        vehiculos = ListarVehiculosUseCase.Ejecutar();
       
        List<Titular> titulares = ListarTitularesUseCase.Ejecutar();
           
        foreach(var t in titulares)
        {
            opciones.Add(t.Id);
        }
        
    }
    Vehiculo v = new Vehiculo();

    private int opcionSeleccionada;
  
    void Agregar()
    {
        //que pasa si agrego una id de titular que no existe.
        if (v.Dominio != null && v.Marca != null && v.Anio != 0 && v.TitularId != 0 )
        {            
            if (v.Dominio != null){
                var a = EsUnicoUseCase.Ejecutar(v.Dominio);                             
                if (a == null)
                {         
                    AgregarVehiculoUseCase.Ejecutar(v);         
                    Exito();     
                }else
                {
                    ElDominioYaExiste();
                }
                        
            }   
        }else{
            DebeCompletarTodosLosDatos();  
        }
    }




      void ModificarVehiculo(Vehiculo v)
    {
        Navegador.NavigateTo($"Vehiculo/{v.Id}");
    }
    DialogoConfirmacion dialogo = null!;    
    DialogoError dialogoError = null!; 
     DialogoExito   dialogoExito = null!;
    private void ConfirmarEliminacion(Vehiculo Vehiculo)
    {        
        dialogo.Mensaje = $"Â¿Desea eliminar al vehiculo {Vehiculo.Marca} {Vehiculo.Dominio}?";
        dialogo.OnConfirmado = EventCallback.Factory.Create(this, () => Eliminar(Vehiculo));   ///ME TIRA UN DIALOGO WARNING AUNQ ESTO ES LO QUE HACE LA TEORIA
        dialogo.Mostrar();
    }
    private void Eliminar(Vehiculo v)
    {

        EliminarVehiculoUseCase.Ejecutar(v.Id);
        vehiculos = ListarVehiculosUseCase.Ejecutar(); 

    }

    private void DebeCompletarTodosLosDatos()  
    {
    dialogoError.Mensaje = $"Debe completar todos los campos";        
    dialogoError.Mostrar();
    }

    private void ElDominioYaExiste()
    {
        dialogoError.Mensaje = $"El Dominio ya se encuentra registrado";        
        dialogoError.Mostrar();
    }

        private void Exito()
    {
        dialogoExito.Mensaje = $"El Vehiculo se ha registrado correctamente";
        dialogoExito.OnConfirmado = EventCallback.Factory.Create(this, () => Actualizar());           
        dialogoExito.Mostrar();
    }

        private void Actualizar()
    {
        Navegador.NavigateTo("vehiculos",true);
        vehiculos = ListarVehiculosUseCase.Ejecutar();
    }


}