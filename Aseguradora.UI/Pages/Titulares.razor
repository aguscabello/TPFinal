@page "/Titulares"
@inject NavigationManager Navegador;
@inject IJSRuntime JsRuntime;
@inject AgregarTitularUseCase AgregarTitularUseCase
@inject ListarTitularesUseCase ListarTitularesUseCase
@inject EliminarTitularUseCase EliminarTitularUseCase
@inject ObtenerTitularUseCase ObtenerTitularUseCase


 
@using Aseguradora.UI.Shared;  @*PREGUNTAR PORQUE ME TIRA EL DIALOGO WARNING*@

<PageTitle>Titulares</PageTitle>
<DialogoError @ref=dialogoError/>
<DialogoExito @ref=dialogoExito/>

<h2> Titulares </h2>

<div style="margin: 25px; margin-left: 0;">    
    <span>Agregar Titular</span>
    <table class="table">
   
        <thead>
            <tr>               
                <th >Nombre</th >
                <th >Apellido</th >
                <th >Dni</th>
                <th >Telefono</th >
                <th >Direccion</th>
                <th >Correo</th >  
                <th >Accion</th >              
            </tr>
        </thead>

        <tbody>
            <tr>
                <td style="max-width: 120px"> <input type="text"      placeholder="Nombre"       @bind="t.Nombre" style="max-width: 100%" > </td>
                <td style="max-width: 120px"> <input type="text"      placeholder="Apellido"       @bind="t.Apellido" style="max-width: 100%" /></td>
                <td style="max-width: 120px" > <input type="number"    placeholder="Dni"        @bind="t.Dni"  style="max-width: 100%"/>    </td>
                <td style="max-width: 120px"> <input type="number"    placeholder="Telefono"   @bind="t.Telefono" style="max-width: 100%" /></td>
                <td style="max-width: 120px"> <input type="text"      placeholder="Direccion"    @bind="t.Direccion" style="max-width: 100%" /></td>
                <td style="max-width: 120px"> <input type="text"      placeholder="Correo"       @bind="t.Correo" style="max-width: 100%" /></td>
                <td style="max-width: 120px"> <button @onclick="Agregar">Agregar</button>  </td>  
            </tr>
        </tbody>

    </table>
</div>


@if (titulares == null)
{
    <p><em>Cargando titulares...</em></p>
}
else
{
    
    <span>Listado de Titulares</span>
    <DialogoConfirmacion @ref=dialogoConfirmacion />
    
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Dni</th>
                <th>Telefono</th>
                <th>Direccion</th>
                <th>Correo</th>  
                <th>Accion</th>              
            </tr>
        </thead>
        <tbody>
            @foreach (var t in titulares)
            {
                <tr>
                    <td>@t.Id</td>
                    <td>@t.Nombre</td>
                    <td>@t.Apellido</td>
                    <td>@t.Dni</td>
                    <td>@t.Telefono</td>
                    <td>@t.Direccion</td>
                    <td>@t.Correo</td>            
                    <td>
                        <button class="btn btn-primary"  @onclick="()=>ModificarTitular(t)">
                            <span class="oi oi-pencil"></span>
                        </button>
                        <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(t)" >
                            <span class="oi oi-trash"></span>
                        </button>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code 
{

     List<Titular> titulares = new List<Titular>();
    protected override void OnInitialized()
    {
         titulares = ListarTitularesUseCase.Ejecutar();
    }
    Titular t = new Titular();

    void Agregar()
    {
        if (t.Nombre != null && t.Apellido != null && t.Dni != 0 && t.Telefono != 0 && t.Direccion != null && t.Correo != null )
        {
            if (t.Dni != 0){
                var a = ObtenerTitularUseCase.Ejecutar(t.Dni);                
                if (a == null)                
                {            
                    
                    AgregarTitularUseCase.Ejecutar(t); 
                    Exito();                    
                }else{
                    ElDniYaExiste();
                }
            }   
        }else
            {
                DebeCompletarTodosLosDatos();
            }
                
    }

    void ModificarTitular(Titular t)
    {
        Navegador.NavigateTo($"Titular/{t.Dni}");
    }
    DialogoConfirmacion dialogoConfirmacion = null!;    
    DialogoError   dialogoError = null!;
    DialogoExito   dialogoExito = null!;
    
    private void ConfirmarEliminacion(Titular titular)
    {        
        dialogoConfirmacion.Mensaje = $"Â¿Desea eliminar al cliente {titular.Nombre} {titular.Apellido}?";
        dialogoConfirmacion.OnConfirmado = EventCallback.Factory.Create(this, () => Eliminar(titular));   ///ME TIRA UN DIALOGO WARNING AUNQ ESTO ES LO QUE HACE LA TEORIA
        dialogoConfirmacion.Mostrar();
    }
    private void Eliminar(Titular t)
    {

        EliminarTitularUseCase.Ejecutar(t.Id);
        titulares = ListarTitularesUseCase.Ejecutar(); //se actualiza la lista de clientes

    }

    private void DebeCompletarTodosLosDatos()
    {
        dialogoError.Mensaje = $"Debe completar todos los campos";        
        dialogoError.Mostrar();
    }
    private void ElDniYaExiste()
    {
        dialogoError.Mensaje = $"El DNI ya se encuentra registrado";        
        dialogoError.Mostrar();
    }

    private void Exito()
    {
        dialogoExito.Mensaje = $"El Titular se ha registrado correctamente";   
        dialogoExito.OnConfirmado = EventCallback.Factory.Create(this, () => Actualizar());      
        dialogoExito.Mostrar();
    }

    private void Actualizar()
    {
        Navegador.NavigateTo("titulares",true);
        titulares = ListarTitularesUseCase.Ejecutar();
    }
}
  
        
